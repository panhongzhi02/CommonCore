package com.taiji.cc.greendao.db;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.taiji.cc.patient.data.Patient;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "PATIENT".
*/
public class PatientDao extends AbstractDao<Patient, Long> {

    public static final String TABLENAME = "PATIENT";

    /**
     * Properties of entity Patient.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property P_id = new Property(1, String.class, "p_id", false, "P_ID");
        public final static Property P_name = new Property(2, String.class, "p_name", false, "P_NAME");
        public final static Property P_gender = new Property(3, String.class, "p_gender", false, "P_GENDER");
        public final static Property P_birthday = new Property(4, String.class, "p_birthday", false, "P_BIRTHDAY");
        public final static Property P_inpno = new Property(5, String.class, "p_inpno", false, "P_INPNO");
        public final static Property Pp_timeInHospital = new Property(6, String.class, "pp_timeInHospital", false, "PP_TIME_IN_HOSPITAL");
        public final static Property Pp_mainDoctor = new Property(7, String.class, "pp_mainDoctor", false, "PP_MAIN_DOCTOR");
        public final static Property Pp_diagnosis = new Property(8, String.class, "pp_diagnosis", false, "PP_DIAGNOSIS");
        public final static Property Pp_wardCode = new Property(9, String.class, "pp_wardCode", false, "PP_WARD_CODE");
        public final static Property Pp_wardName = new Property(10, String.class, "pp_wardName", false, "PP_WARD_NAME");
        public final static Property Pp_alergy_drugs = new Property(11, String.class, "pp_alergy_drugs", false, "PP_ALERGY_DRUGS");
        public final static Property Pp_patientStatus = new Property(12, String.class, "pp_patientStatus", false, "PP_PATIENT_STATUS");
        public final static Property Pp_careLevel = new Property(13, String.class, "pp_careLevel", false, "PP_CARE_LEVEL");
        public final static Property Pp_bedNo = new Property(14, String.class, "pp_bedNo", false, "PP_BED_NO");
        public final static Property Pp_exten_2 = new Property(15, String.class, "pp_exten_2", false, "PP_EXTEN_2");
        public final static Property Pp_exten_3 = new Property(16, String.class, "pp_exten_3", false, "PP_EXTEN_3");
        public final static Property Pp_exten_4 = new Property(17, String.class, "pp_exten_4", false, "PP_EXTEN_4");
        public final static Property Pp_bedLable = new Property(18, String.class, "pp_bedLable", false, "PP_BED_LABLE");
        public final static Property Pp_visitid = new Property(19, String.class, "pp_visitid", false, "PP_VISITID");
        public final static Property Db = new Property(20, String.class, "db", false, "DB");
        public final static Property Pp_deptCode = new Property(21, String.class, "pp_deptCode", false, "PP_DEPT_CODE");
        public final static Property Pp_deptName = new Property(22, String.class, "pp_deptName", false, "PP_DEPT_NAME");
        public final static Property WardName = new Property(23, String.class, "wardName", false, "WARD_NAME");
        public final static Property Age = new Property(24, String.class, "age", false, "AGE");
    }


    public PatientDao(DaoConfig config) {
        super(config);
    }
    
    public PatientDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"PATIENT\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"P_ID\" TEXT," + // 1: p_id
                "\"P_NAME\" TEXT," + // 2: p_name
                "\"P_GENDER\" TEXT," + // 3: p_gender
                "\"P_BIRTHDAY\" TEXT," + // 4: p_birthday
                "\"P_INPNO\" TEXT," + // 5: p_inpno
                "\"PP_TIME_IN_HOSPITAL\" TEXT," + // 6: pp_timeInHospital
                "\"PP_MAIN_DOCTOR\" TEXT," + // 7: pp_mainDoctor
                "\"PP_DIAGNOSIS\" TEXT," + // 8: pp_diagnosis
                "\"PP_WARD_CODE\" TEXT," + // 9: pp_wardCode
                "\"PP_WARD_NAME\" TEXT," + // 10: pp_wardName
                "\"PP_ALERGY_DRUGS\" TEXT," + // 11: pp_alergy_drugs
                "\"PP_PATIENT_STATUS\" TEXT," + // 12: pp_patientStatus
                "\"PP_CARE_LEVEL\" TEXT," + // 13: pp_careLevel
                "\"PP_BED_NO\" TEXT," + // 14: pp_bedNo
                "\"PP_EXTEN_2\" TEXT," + // 15: pp_exten_2
                "\"PP_EXTEN_3\" TEXT," + // 16: pp_exten_3
                "\"PP_EXTEN_4\" TEXT," + // 17: pp_exten_4
                "\"PP_BED_LABLE\" TEXT," + // 18: pp_bedLable
                "\"PP_VISITID\" TEXT," + // 19: pp_visitid
                "\"DB\" TEXT," + // 20: db
                "\"PP_DEPT_CODE\" TEXT," + // 21: pp_deptCode
                "\"PP_DEPT_NAME\" TEXT," + // 22: pp_deptName
                "\"WARD_NAME\" TEXT," + // 23: wardName
                "\"AGE\" TEXT);"); // 24: age
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"PATIENT\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Patient entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String p_id = entity.getP_id();
        if (p_id != null) {
            stmt.bindString(2, p_id);
        }
 
        String p_name = entity.getP_name();
        if (p_name != null) {
            stmt.bindString(3, p_name);
        }
 
        String p_gender = entity.getP_gender();
        if (p_gender != null) {
            stmt.bindString(4, p_gender);
        }
 
        String p_birthday = entity.getP_birthday();
        if (p_birthday != null) {
            stmt.bindString(5, p_birthday);
        }
 
        String p_inpno = entity.getP_inpno();
        if (p_inpno != null) {
            stmt.bindString(6, p_inpno);
        }
 
        String pp_timeInHospital = entity.getPp_timeInHospital();
        if (pp_timeInHospital != null) {
            stmt.bindString(7, pp_timeInHospital);
        }
 
        String pp_mainDoctor = entity.getPp_mainDoctor();
        if (pp_mainDoctor != null) {
            stmt.bindString(8, pp_mainDoctor);
        }
 
        String pp_diagnosis = entity.getPp_diagnosis();
        if (pp_diagnosis != null) {
            stmt.bindString(9, pp_diagnosis);
        }
 
        String pp_wardCode = entity.getPp_wardCode();
        if (pp_wardCode != null) {
            stmt.bindString(10, pp_wardCode);
        }
 
        String pp_wardName = entity.getPp_wardName();
        if (pp_wardName != null) {
            stmt.bindString(11, pp_wardName);
        }
 
        String pp_alergy_drugs = entity.getPp_alergy_drugs();
        if (pp_alergy_drugs != null) {
            stmt.bindString(12, pp_alergy_drugs);
        }
 
        String pp_patientStatus = entity.getPp_patientStatus();
        if (pp_patientStatus != null) {
            stmt.bindString(13, pp_patientStatus);
        }
 
        String pp_careLevel = entity.getPp_careLevel();
        if (pp_careLevel != null) {
            stmt.bindString(14, pp_careLevel);
        }
 
        String pp_bedNo = entity.getPp_bedNo();
        if (pp_bedNo != null) {
            stmt.bindString(15, pp_bedNo);
        }
 
        String pp_exten_2 = entity.getPp_exten_2();
        if (pp_exten_2 != null) {
            stmt.bindString(16, pp_exten_2);
        }
 
        String pp_exten_3 = entity.getPp_exten_3();
        if (pp_exten_3 != null) {
            stmt.bindString(17, pp_exten_3);
        }
 
        String pp_exten_4 = entity.getPp_exten_4();
        if (pp_exten_4 != null) {
            stmt.bindString(18, pp_exten_4);
        }
 
        String pp_bedLable = entity.getPp_bedLable();
        if (pp_bedLable != null) {
            stmt.bindString(19, pp_bedLable);
        }
 
        String pp_visitid = entity.getPp_visitid();
        if (pp_visitid != null) {
            stmt.bindString(20, pp_visitid);
        }
 
        String db = entity.getDb();
        if (db != null) {
            stmt.bindString(21, db);
        }
 
        String pp_deptCode = entity.getPp_deptCode();
        if (pp_deptCode != null) {
            stmt.bindString(22, pp_deptCode);
        }
 
        String pp_deptName = entity.getPp_deptName();
        if (pp_deptName != null) {
            stmt.bindString(23, pp_deptName);
        }
 
        String wardName = entity.getWardName();
        if (wardName != null) {
            stmt.bindString(24, wardName);
        }
 
        String age = entity.getAge();
        if (age != null) {
            stmt.bindString(25, age);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Patient entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String p_id = entity.getP_id();
        if (p_id != null) {
            stmt.bindString(2, p_id);
        }
 
        String p_name = entity.getP_name();
        if (p_name != null) {
            stmt.bindString(3, p_name);
        }
 
        String p_gender = entity.getP_gender();
        if (p_gender != null) {
            stmt.bindString(4, p_gender);
        }
 
        String p_birthday = entity.getP_birthday();
        if (p_birthday != null) {
            stmt.bindString(5, p_birthday);
        }
 
        String p_inpno = entity.getP_inpno();
        if (p_inpno != null) {
            stmt.bindString(6, p_inpno);
        }
 
        String pp_timeInHospital = entity.getPp_timeInHospital();
        if (pp_timeInHospital != null) {
            stmt.bindString(7, pp_timeInHospital);
        }
 
        String pp_mainDoctor = entity.getPp_mainDoctor();
        if (pp_mainDoctor != null) {
            stmt.bindString(8, pp_mainDoctor);
        }
 
        String pp_diagnosis = entity.getPp_diagnosis();
        if (pp_diagnosis != null) {
            stmt.bindString(9, pp_diagnosis);
        }
 
        String pp_wardCode = entity.getPp_wardCode();
        if (pp_wardCode != null) {
            stmt.bindString(10, pp_wardCode);
        }
 
        String pp_wardName = entity.getPp_wardName();
        if (pp_wardName != null) {
            stmt.bindString(11, pp_wardName);
        }
 
        String pp_alergy_drugs = entity.getPp_alergy_drugs();
        if (pp_alergy_drugs != null) {
            stmt.bindString(12, pp_alergy_drugs);
        }
 
        String pp_patientStatus = entity.getPp_patientStatus();
        if (pp_patientStatus != null) {
            stmt.bindString(13, pp_patientStatus);
        }
 
        String pp_careLevel = entity.getPp_careLevel();
        if (pp_careLevel != null) {
            stmt.bindString(14, pp_careLevel);
        }
 
        String pp_bedNo = entity.getPp_bedNo();
        if (pp_bedNo != null) {
            stmt.bindString(15, pp_bedNo);
        }
 
        String pp_exten_2 = entity.getPp_exten_2();
        if (pp_exten_2 != null) {
            stmt.bindString(16, pp_exten_2);
        }
 
        String pp_exten_3 = entity.getPp_exten_3();
        if (pp_exten_3 != null) {
            stmt.bindString(17, pp_exten_3);
        }
 
        String pp_exten_4 = entity.getPp_exten_4();
        if (pp_exten_4 != null) {
            stmt.bindString(18, pp_exten_4);
        }
 
        String pp_bedLable = entity.getPp_bedLable();
        if (pp_bedLable != null) {
            stmt.bindString(19, pp_bedLable);
        }
 
        String pp_visitid = entity.getPp_visitid();
        if (pp_visitid != null) {
            stmt.bindString(20, pp_visitid);
        }
 
        String db = entity.getDb();
        if (db != null) {
            stmt.bindString(21, db);
        }
 
        String pp_deptCode = entity.getPp_deptCode();
        if (pp_deptCode != null) {
            stmt.bindString(22, pp_deptCode);
        }
 
        String pp_deptName = entity.getPp_deptName();
        if (pp_deptName != null) {
            stmt.bindString(23, pp_deptName);
        }
 
        String wardName = entity.getWardName();
        if (wardName != null) {
            stmt.bindString(24, wardName);
        }
 
        String age = entity.getAge();
        if (age != null) {
            stmt.bindString(25, age);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public Patient readEntity(Cursor cursor, int offset) {
        Patient entity = new Patient( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // p_id
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // p_name
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // p_gender
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // p_birthday
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // p_inpno
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // pp_timeInHospital
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // pp_mainDoctor
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // pp_diagnosis
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // pp_wardCode
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // pp_wardName
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // pp_alergy_drugs
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // pp_patientStatus
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // pp_careLevel
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // pp_bedNo
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // pp_exten_2
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // pp_exten_3
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // pp_exten_4
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // pp_bedLable
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // pp_visitid
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // db
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // pp_deptCode
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // pp_deptName
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // wardName
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24) // age
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Patient entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setP_id(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setP_name(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setP_gender(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setP_birthday(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setP_inpno(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setPp_timeInHospital(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setPp_mainDoctor(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setPp_diagnosis(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setPp_wardCode(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setPp_wardName(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setPp_alergy_drugs(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setPp_patientStatus(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setPp_careLevel(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setPp_bedNo(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setPp_exten_2(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setPp_exten_3(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setPp_exten_4(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setPp_bedLable(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setPp_visitid(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setDb(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setPp_deptCode(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setPp_deptName(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setWardName(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setAge(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(Patient entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(Patient entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(Patient entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
